<!DOCTYPE html>
<html>
    <head>
        <meta charset='utf-8'>
        <title>{{name}}</title>
        <script src='{{benchmarkjsURL}}'></script>
    </head>

    <body>
        <h1>Performance Test: {{name}}</h1>
        <p>Test results available in console.</p>

        <script type="text/x-handlebars-template" id="perftest-test-html-template">
            {{{html}}}
        </script>

        <script>
        var name = document.getElementsByTagName('title')[0].innerHTML,
            readyCount = {{readyCount}},
            suite;

        // Populate console.log to prevent errors in non-console browsers
        try { console.log(); } catch (e) { window.console = { log: function() {} }; }

        // Executed anytime a loader has completed and is ready
        function ready () {
            // Have all the loaders finished?
            if (--readyCount === 0) {

                // First, populate the test HTML
                resetHTML();

                // Next, add the tests
                addTests();

                // and now execute the tests
                executeTests();
            }
        }

        // Create the Benchmark.js test suite
        suite = new Benchmark.Suite({

            // The name of the suite
            name: name,

            // called when the suite starts running
            onStart: function (e) {
                console.log('Executing ' + suite.options.name + ' (' + suite.length + ' tests)...');
            },

            // called between running benchmarks
            onCycle: function (e) {
                console.log(e.target.toString());
            },

            // called when aborted
            onAbort: function (e) {
                console.log('Abort');
            },

            // called when a test errors
            onError: function (e) {
                throw new Error(e.target.error.message)
            },

            // called when reset
            onReset: function (e) {
                console.log('Reset');
            },

            // called when the suite completes running
            onComplete: function (e) {
                var tests = [], test;

                while (test = suite.shift()) {
                    tests.push(test);
                }

                console.log(tests.length + ' TESTS COMPLETE');
            }
        });

        function resetHTML() {
            var srcNode = document.getElementById('perftest-test-html-template'),
                targetNode = document.getElementById('perftest-test-html');

            targetNode.innerHTML = srcNode.innerHTML;
        }

        function addTests () {
            {{#each tests}}
            // Test {{@index}}
            suite.add({
                name: '{{this.name}}',
                defer: {{this.defer}},
                setup: {{{this.setup}}},
                teardown: {{{this.teardown}}},
                fn: {{{this.fn}}}
            });
            {{/each}}
        }

        function executeTests () {
            suite.run({ async: true });
        }

        ready();
        </script>

        {{{bottomHTML}}}

        <div id='perftest-test-html'></div>
    </body>
</html>
